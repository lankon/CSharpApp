<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_Transform.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>